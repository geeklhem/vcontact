#!/usr/bin/env python
"""vContact - Copyright 2014 Guilhem Doulcier.

vcontact (viral Contig Automatic Cluster Taxonomy) is tool to perform
"Guilt-by-contig-association" automatic classification of viral
contigs.

This program is ditributed under the term of the GNU General Public
Licence v3 (or later) with ABSOLUTELY NO WARRANTY. This is free
software, and you are welcome to redistribute it.
"""

import logging
import pandas
import os
import argparse
import vcontact.loader


# Argparse config 
parser = argparse.ArgumentParser(description=__doc__,formatter_class=argparse.RawDescriptionHelpFormatter,)
parser.add_argument('output',
                    help='Output directory')
parser.add_argument('-c','--contigs',
                    help='Contig info file (tsv or csv)',)
parser.add_argument('-p','--pcs',
                    help='Protein clusters info file (tsv or csv)',)
parser.add_argument('-m','--pcprofiles',
                    help='Protein cluster profiles of the contigs (tsv or csv)',)
parser.add_argument('-v','--verbose',
                    help='Verbosity level : -v warning, -vv info, -vvv debug, (default debug)',
                    action="count",
                    default=-1)
parser.add_argument('-f','--force-overwrite',
                    help='Overwrite existing files',
                    action="store_true")
args = parser.parse_args()

# Logging config
log_levels = [logging.WARNING,logging.INFO,logging.DEBUG]

# create logger with 'spam_application'
logger = logging.getLogger('vcontact')
logger.setLevel(log_levels[args.verbose])
ch = logging.StreamHandler()
ch.setLevel(log_levels[args.verbose])
ch.setFormatter(logging.Formatter('%(levelname)s:%(name)s: %(message)s'))
logger.addHandler(ch)
logger.debug("Arguments: {}".format(args))



def main(args):
    folder = args.output 
    if not os.path.exists(folder):
        os.mkdir(folder)
        logger.info("Output directory {} created.".format(folder))
    else:
        logger.info("Using existing directory {}.".format(folder))

    vcontact.loader.csv(args.contigs,args.pcs,args.pcprofiles,folder,args.force_overwrite)
        
if __name__ == "__main__":
    main(args)

